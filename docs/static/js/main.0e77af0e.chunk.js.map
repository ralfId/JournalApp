{"version":3,"sources":["firebase/firebaseConfig.js","types/types.js","actions/ui.js","helpers/loadNotes.js","helpers/uploadImage.js","actions/notes.js","actions/auth.js","hooks/useForms.js","components/auth/LoginScreen.js","components/auth/RegisterScreen.js","routers/AuthRouter.js","components/notes/NotesAppBar.js","components/notes/NoteScreen.js","components/journal/NothingSelected.js","components/journal/JournalEntry.js","components/journal/JournalEntries.js","components/journal/SideBar.js","components/journal/JournalScreen.js","routers/PrivateRoute.js","routers/PublicRoute.js","routers/AppRouter.js","reducers/notesReducer.js","reducers/uiReducer.js","store/store.js","reducers/authReducer.js","JournalApp.js","index.js"],"names":["firebaseConfig","apiKey","process","REACT_APP_APIKEY","authDomain","REACT_APP_AUTHDOMAIN","projectId","REACT_APP_PROJECTID","storageBucket","REACT_APP_STORAGEBUCKET","messagingSenderId","REACT_APP_MESSAGINGSENDERID","appId","REACT_APP_APPID","firebase","initializeApp","db","firestore","googleAuthProvider","auth","GoogleAuthProvider","types","setError","err","type","payload","removeError","finishLoading","loadNotes","uid","a","collection","get","notesSnap","notes","forEach","snapChild","push","id","data","uploadImage","file","formData","FormData","append","fetch","method","body","cloudReq","ok","json","cloudResp","secure_url","console","log","activeNote","note","addNewNote","startLoadingNotes","dispatch","setNotes","startSavingNote","getState","imageUrl","noteToFireStore","doc","update","catch","e","message","Swal","fire","refreshUpdatedNote","position","icon","title","text","showConfirmButton","timer","deleteNote","startLoginEmailPassword","email","password","signInWithEmailAndPassword","then","user","login","displayName","logout","params","useForm","initialState","useState","values","setValues","reset","newFormState","handleInputChange","target","name","value","LoginScreen","useDispatch","useSelector","state","ui","msgError","loading","formValues","isFormValid","validator","isEmail","length","className","onSubmit","preventDefault","htmlFor","autoComplete","onChange","disabled","onClick","signInWithPopup","src","alt","to","RegisterScreen","st","confirmpassword","trim","createUserWithEmailAndPassword","updateProfile","error","startRegisterWithEmailPasswordName","AuthRouter","path","component","NotesAppBar","active","files","allowOutsideClick","didOpen","showLoading","imageFileUrl","close","startUploadingImage","style","display","document","querySelector","click","NoteScreen","activeId","useRef","useEffect","current","placeholder","dispath","delete","startDeleteNote","NothingSelected","JournalEntry","date","noteDate","moment","backgroundImage","backgroundSize","format","JournalEntries","map","SideBar","signOut","newNote","Date","getTime","add","docRef","JournalScreen","PrivateRoute","isAuthenticated","Component","rest","localStorage","setItem","location","pathname","props","PublicRoute","AppRouter","checking","setchecking","isLoggedIn","setIsLoggedIn","onAuthStateChanged","exact","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","action","filter","store","createStore","applyMiddleware","thunk","JournalApp","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.0e77af0e.chunk.js","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\n\r\n// Firebase configuration\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_APIKEY,\r\n    authDomain: process.env.REACT_APP_AUTHDOMAIN,\r\n    projectId: process.env.REACT_APP_PROJECTID,\r\n    storageBucket: process.env.REACT_APP_STORAGEBUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGINGSENDERID,\r\n    appId: process.env.REACT_APP_APPID\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst db = firebase.firestore();\r\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider();\r\n\r\nexport { db, googleAuthProvider, firebase }","export const types =  {\r\n    \r\n    //authReducer\r\n    login: '[Auth] Login',\r\n    logout: '[Auth] Logout',\r\n\r\n    //uiReducer\r\n    uiSetError: '[UI] Set Error',\r\n    uiRemoveError: '[UI] Remove Error',\r\n    uiStartLoading: '[UI] Start Loading',\r\n    uiFinishLoading: '[UI] Finish Loading',\r\n\r\n    //notesReducer\r\n    notesAddNewNote: '[Notes] Add New Note',\r\n    notesSetActiveNote: '[Notes] Set Active Note',\r\n    notesLoadNotes: '[Notes] Load Notes',\r\n    notesRefrshUpdatedNote: '[Notes] Refresh Updated Note',\r\n    notesUpdateImageNote: '[Notes] Update Image Note',\r\n    notesDeleteNote: '[Notes] Delete Note',\r\n    notesLogoutCleaningNotes: '[Notes] Logout Cleaning Notes',\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\nexport const setError = (err) => ({\r\n    type: types.uiSetError,\r\n    payload: err\r\n})\r\n\r\n\r\nexport const removeError = () => ({\r\n    type: types.uiRemoveError\r\n})\r\n\r\nexport const startLoading = () => ({\r\n    type: types.uiStartLoading\r\n})\r\n\r\nexport const finishLoading = () => ({\r\n    type: types.uiFinishLoading\r\n})\r\n\r\n\r\n","import { db } from \"../firebase/firebaseConfig\"\r\n\r\nexport const loadNotes = async (uid) => {\r\n\r\n    const notesSnap = await db.collection(`${uid}/journal/notes`).get();\r\n    const notes = [];\r\n\r\n    notesSnap.forEach(snapChild =>{\r\n        notes.push({\r\n            id: snapChild.id,\r\n            ...snapChild.data()\r\n        })\r\n    })\r\n    return notes;\r\n}\r\n","\r\n\r\n\r\nexport const uploadImage = async (file) => {\r\n\r\n    try {\r\n        const cloudUrl = 'https://api.cloudinary.com/v1_1/dvupfwoil/image/upload';\r\n\r\n        const formData = new FormData();\r\n        formData.append('upload_preset', 'journal-app-ractjs');\r\n        formData.append('file', file);\r\n\r\n        const cloudReq = await fetch(cloudUrl, {\r\n            method: 'POST',\r\n            body: formData\r\n        });\r\n\r\n        if (cloudReq.ok) {\r\n            const cloudResp = await cloudReq.json();\r\n\r\n            return cloudResp.secure_url;\r\n        } else {\r\n            // throw await cloudReq.json();\r\n            return null;\r\n        }\r\n\r\n    } catch (error) {\r\n        console.log('uploadImage>>>>>>>>>>>>>>>>'+error)\r\n    }\r\n}\r\n","import Swal from \"sweetalert2\";\r\n\r\n\r\nimport { db } from \"../firebase/firebaseConfig\";\r\nimport { loadNotes } from \"../helpers/loadNotes\";\r\nimport { uploadImage } from \"../helpers/uploadImage\";\r\nimport { types } from \"../types/types\";\r\n\r\nexport const startNewNote = () => {\r\n\r\n    return async (dispatch, getState) => {\r\n        const { uid } = getState().auth;\r\n\r\n        const newNote = {\r\n            title: '',\r\n            body: '',\r\n            date: new Date().getTime()\r\n        }\r\n\r\n        try {\r\n            const docRef = await db.collection(`${uid}/journal/notes`).add(newNote)\r\n                .catch(e => {\r\n                    Swal.fire('Saved', e.message, 'success');\r\n                });\r\n            dispatch(activeNote(docRef.id, newNote));\r\n            dispatch(addNewNote(docRef.id, newNote));\r\n        } catch (error) {\r\n            console.log('startNewNote>>>>>>>>>>>>>>>>>' + error)\r\n        }\r\n    }\r\n}\r\n\r\nexport const activeNote = (id, note) => ({\r\n    type: types.notesSetActiveNote,\r\n    payload: { id, ...note }\r\n})\r\n\r\nexport const addNewNote = (id, note) => ({\r\n    type: types.notesAddNewNote,\r\n    payload: { id, ...note }\r\n})\r\n\r\n\r\nexport const startLoadingNotes = (id) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const notes = await loadNotes(id);\r\n            dispatch(setNotes(notes));\r\n        } catch (error) {\r\n            console.log('startLoadingNotes >>>>>>' + error)\r\n        }\r\n    }\r\n}\r\n\r\nexport const setNotes = (notes) => ({\r\n    type: types.notesLoadNotes,\r\n    payload: notes\r\n})\r\n\r\nexport const startSavingNote = (note) => {\r\n\r\n    return async (dispatch, getState) => {\r\n\r\n        const { uid } = getState().auth;\r\n\r\n        if (!note.imageUrl) {\r\n            delete note.imageUrl\r\n        }\r\n\r\n        const noteToFireStore = { ...note };\r\n        delete noteToFireStore.id;\r\n\r\n        await db.doc(`/${uid}/journal/notes/${note.id}`).update(noteToFireStore)\r\n            .catch(e => {\r\n                console.log(e.message)\r\n                Swal.fire('Saved', e.message, 'success');\r\n            });\r\n        dispatch(refreshUpdatedNote(note.id, noteToFireStore));\r\n\r\n\r\n        Swal.fire({\r\n            position: 'top-end',\r\n            icon: 'success',\r\n            title: 'Your note has been saved',\r\n            text: `${note.title}`,\r\n            showConfirmButton: false,\r\n            timer: 1500\r\n        })\r\n    }\r\n}\r\n\r\nexport const refreshUpdatedNote = (id, note) => ({\r\n    type: types.notesRefrshUpdatedNote,\r\n    payload: { id: id, note: { id, ...note } }\r\n})\r\n\r\nexport const startUploadingImage = (file) => {\r\n    return async (dispatch, getState) => {\r\n\r\n        try {\r\n            const activeNote = getState().notes.active;\r\n\r\n            Swal.fire({\r\n                title: 'Loading...',\r\n                text: 'Please wait...',\r\n                allowOutsideClick: false,\r\n                showConfirmButton: false,\r\n                didOpen: () => { Swal.showLoading() }\r\n            })\r\n            \r\n            const imageFileUrl = await uploadImage(file);\r\n            activeNote.imageUrl = imageFileUrl;\r\n\r\n            dispatch(startSavingNote(activeNote));\r\n\r\n            Swal.close();\r\n        } catch (error) {\r\n            console.log('startUploadingImage >>>>>>>>>>>>' + error)\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const startDeleteNote = (id) => {\r\n    return async (dispath, getState) => {\r\n\r\n        const uid = getState().auth.uid;\r\n\r\n        Swal.fire({\r\n            title: 'Loading...',\r\n            text: 'Please wait...',\r\n            allowOutsideClick: false,\r\n            showConfirmButton: false,\r\n            didOpen: () => { Swal.showLoading() }\r\n        })\r\n        await db.doc(`${uid}/journal/notes/${id}`).delete();\r\n\r\n        dispath(deleteNote(id));\r\n\r\n        Swal.close()\r\n\r\n    }\r\n}\r\n\r\nexport const deleteNote = (id) => ({\r\n    type: types.notesDeleteNote,\r\n    payload: { id }\r\n})\r\n\r\nexport const notesLogout = () => ({\r\n    type: types.notesLogoutCleaningNotes\r\n})\r\n","import { firebase, googleAuthProvider } from '../firebase/firebaseConfig'\r\nimport Swal from 'sweetalert2'\r\n\r\nimport { types } from '../types/types';\r\nimport { finishLoading, startLoading } from './ui';\r\nimport { notesLogout } from './notes';\r\n\r\n\r\nexport const startLoginEmailPassword = (email, password) => {\r\n    return (dispatch) => {\r\n\r\n        dispatch(startLoading());\r\n\r\n        return firebase.auth().signInWithEmailAndPassword(email, password)\r\n            .then(({ user }) => {\r\n\r\n                dispatch(login(user.uid, user.displayName));\r\n\r\n                dispatch(finishLoading());\r\n\r\n            })\r\n            .catch(e => {\r\n                \r\n                dispatch(finishLoading());\r\n\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: '',\r\n                    text: e.message,\r\n                  })\r\n            })\r\n    }\r\n}\r\n\r\nexport const startRegisterWithEmailPasswordName = (email, password, name) => {\r\n    return (dispatch) => {\r\n\r\n        firebase.auth().createUserWithEmailAndPassword(email, password)\r\n        \r\n            .then(async ({ user }) => {\r\n\r\n                await user.updateProfile({ displayName: name })\r\n                dispatch(login(user.uid, user.displayName))\r\n\r\n            }).catch(error =>{\r\n                 Swal.fire('Error', error.message, 'error')\r\n                })\r\n    }\r\n}\r\n\r\n\r\nexport const startGoogleLogin = () => {\r\n    return (dispatch) => {\r\n        firebase.auth().signInWithPopup(googleAuthProvider)\r\n            .then(({ user }) => { dispatch(login(user.uid, user.displayName)) })\r\n    }\r\n}\r\n\r\n\r\nexport const login = (uid, displayName) => (\r\n    {\r\n        type: types.login,\r\n        payload: { uid, displayName }\r\n    })\r\n\r\nexport const startLogout = () => {\r\n    return async (dispatch) => {\r\n        await firebase.auth().signOut();\r\n        dispatch(logout())\r\n        dispatch(notesLogout());\r\n    }\r\n}\r\nexport const logout = (params) => ({ type: types.logout})\r\n\r\n","import { useState } from 'react';\r\n\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n    \r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = (newFormState = initialState) => {\r\n        setValues( newFormState );\r\n    }\r\n\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        });\r\n\r\n    }\r\n\r\n    return [ values, handleInputChange, reset ];\r\n\r\n}","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport validator from 'validator'\r\n\r\n\r\nimport { startGoogleLogin, startLoginEmailPassword } from '../../actions/auth'\r\nimport { removeError, setError } from '../../actions/ui'\r\nimport { useForm } from '../../hooks/useForms'\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { msgError, loading } = useSelector(state => state.ui)\r\n    \r\n\r\n    const [formValues, handleInputChange] = useForm({ email: 'ralf_raid@yopmail.com', password: '123456' })\r\n    const { email, password } = formValues;\r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault();\r\n        if (isFormValid()) {\r\n            dispatch(startLoginEmailPassword(email, password))\r\n        }\r\n    }\r\n\r\n    const isFormValid = () => {\r\n        if (!validator.isEmail(email)) {\r\n            dispatch(setError('email is not valid'))\r\n            return false\r\n        } else if (password.length < 5) {\r\n\r\n            dispatch(setError('password should be at least 6 characters'))\r\n            return false;\r\n        }\r\n\r\n        dispatch(removeError())\r\n        return true;\r\n\r\n    }\r\n\r\n\r\n    const handleGoogleLogin = () => { dispatch(startGoogleLogin()) }\r\n\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"auth__title\"> Login Screen </h3>\r\n            <form onSubmit={handleLogin} className=\"animate__animated animate__fadeIn  animate__faster  \">\r\n                {\r\n                    msgError &&\r\n                    (\r\n                        <div className=\"auth__alert-error\">\r\n                            {msgError}\r\n                        </div>\r\n                    )\r\n                }\r\n                <label htmlFor='email'>Email</label>\r\n                <input className=\"auth__input\" name='email' type='text' autoComplete='off' value={email} onChange={handleInputChange} />\r\n\r\n                <label htmlFor='password'>Password</label>\r\n                <input className=\"auth__input\" name='password' type='password' autoComplete='off' value={password} onChange={handleInputChange} />\r\n                <br />\r\n                <button className=\"btn btn-primary btn-block\" disabled={loading}>\r\n                    SigIn\r\n                </button>\r\n\r\n\r\n\r\n                <div className=\"auth__social-networks\">\r\n                    <p>Login with social netwoks</p>\r\n                    <div className=\"google-btn\" onClick={handleGoogleLogin}>\r\n                        <div className=\"google-icon-wrapper\">\r\n                            <img className=\"google-icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" alt=\"google button\" />\r\n                        </div>\r\n                        <p className=\"btn-text\">\r\n                            <b>Sign in with google</b>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n\r\n                <Link className=\"link\" to=\"/auth/register\">\r\n                    Crate new acount\r\n                </Link>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport validator from 'validator'\r\nimport { startRegisterWithEmailPasswordName } from '../../actions/auth'\r\nimport { setError, removeError } from '../../actions/ui'\r\nimport { useForm } from '../../hooks/useForms'\r\n\r\nexport const RegisterScreen = () => {\r\n\r\n\r\n    const dispatch = useDispatch();\r\n    const {msgError} = useSelector(st => st.ui);\r\n\r\n    const [formValues, handleInputChange] = useForm(\r\n        {\r\n            name: 'rafael',\r\n            email: 'ralf_raid@yopmail.com',\r\n            password: '123456',\r\n            confirmpassword: '123456',\r\n        }\r\n    )\r\n\r\n    const { name, email, password, confirmpassword } = formValues;\r\n\r\n    const handleRegister = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (isFormValid()) {\r\n            dispatch(startRegisterWithEmailPasswordName(email, password, name));\r\n        }\r\n    }\r\n\r\n    const isFormValid = () => {\r\n\r\n        if (name.trim().length === 0) {\r\n\r\n            dispatch(setError('name is required'))\r\n            return false;\r\n\r\n        } else if (!validator.isEmail(email)) {\r\n\r\n            dispatch(setError('email is not valid'))\r\n            return false;\r\n\r\n        } else if (password !== confirmpassword || password.length < 5) {\r\n\r\n            dispatch(setError('password should be at least 6 characters an match each other'))\r\n            return false;\r\n\r\n        }\r\n\r\n        dispatch(removeError())\r\n        return true;\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"auth__title\"> Register Screen </h3>\r\n            <form onSubmit={handleRegister} className=\"animate__animated animate__fadeIn  animate__faster  \">\r\n                {\r\n                    msgError &&\r\n                    (\r\n                        <div className=\"auth__alert-error\">\r\n                            {msgError}\r\n                        </div>\r\n                    )\r\n                }\r\n                <label htmlFor='name'>Name</label>\r\n                <input className=\"auth__input\" name='name' value={name} type='text' autoComplete='off' onChange={handleInputChange} />\r\n\r\n                <label htmlFor='email'>Email</label>\r\n                <input className=\"auth__input\" name='email' value={email} type='text' autoComplete='off' onChange={handleInputChange} />\r\n\r\n                <label htmlFor='password'>Password</label>\r\n                <input className=\"auth__input\" name='password' value={password} type='password' autoComplete='off' onChange={handleInputChange} />\r\n\r\n                <label htmlFor='password'>Confirm password</label>\r\n                <input className=\"auth__input\" name='confirmpassword' value={confirmpassword} type='password' autoComplete='off' onChange={handleInputChange} />\r\n                <br />\r\n                <button className=\"btn btn-primary btn-block mb-5 mt-5\">\r\n                    Register\r\n            </button>\r\n\r\n\r\n\r\n\r\n                <Link className=\"link \" to=\"/auth/login\">\r\n                    Already register?\r\n            </Link>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Redirect, Route, Switch } from 'react-router-dom'\r\nimport { LoginScreen } from '../components/auth/LoginScreen'\r\nimport { RegisterScreen } from '../components/auth/RegisterScreen'\r\n\r\nexport const AuthRouter = () => {\r\n    return (\r\n        <div className=\"auth__main\">\r\n            <div className=\"auth__box-container\">\r\n                <Switch>\r\n                    <Route path='/auth/login' component={LoginScreen} />\r\n                    <Route path='/auth/register' component={RegisterScreen} />\r\n\r\n                    <Redirect to='/auth/login' />\r\n                </Switch>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startSavingNote, startUploadingImage } from '../../actions/notes';\r\n\r\nexport const NotesAppBar = () => {\r\n\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { active } = useSelector(state => state.notes)\r\n\r\n    const handleSaveNote = () => {\r\n        // console.log(active)\r\n        dispatch(startSavingNote(active));\r\n    }\r\n\r\n    const handleSelectImage = () => {\r\n        document.querySelector('#fileSelector').click()\r\n    }\r\n    \r\n    const handleOpenFileSelector = (e) => {\r\n        const file  = e.target.files[0]\r\n        dispatch(startUploadingImage(file));\r\n    }\r\n    \r\n\r\n    return (\r\n        <div className=\"notes__appbar \">\r\n            <span> 28 de agosto de 2021</span>\r\n            <input id='fileSelector' type=\"file\" onChange={handleOpenFileSelector} style={{display: 'none'}}/>\r\n            <div>\r\n                <button className=\"btn\" onClick={handleSelectImage}>\r\n                    Picture\r\n                </button>\r\n                <button className=\"btn\" onClick={handleSaveNote}>\r\n                    Save\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useRef } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { activeNote, startDeleteNote } from '../../actions/notes'\r\nimport { useForm } from '../../hooks/useForms'\r\nimport { NotesAppBar } from './NotesAppBar'\r\n\r\nexport const NoteScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { active: note } = useSelector(state => state.notes)\r\n    const [formValues, handleInputChange, reset] = useForm(note);\r\n    const { id, title, body } = formValues;\r\n\r\n    const activeId = useRef(note.id);\r\n\r\n    useEffect(() => {\r\n\r\n        if (note.id !== activeId.current) {\r\n            reset(note);\r\n            activeId.current = note.id\r\n        }\r\n    }, [note, reset]);\r\n\r\n    useEffect(() => {\r\n        dispatch(activeNote(formValues.id, { ...formValues }))\r\n    }, [formValues, dispatch]);\r\n\r\n    const handleDeleteNote = () => {\r\n        dispatch(startDeleteNote(id));\r\n    }\r\n    \r\n    return (\r\n        <div className=\"notes__main-content\">\r\n            <NotesAppBar />\r\n\r\n            <div className=\"notes__content\">\r\n\r\n                <label className=\"mt-5 mb-1\" htmlFor=\"title\">Title</label>\r\n                <input type=\"text\"\r\n                    placeholder=\"Title\" name=\"title\"\r\n                    className=\"notes__title-input\" value={title} onChange={handleInputChange} />\r\n\r\n                <label className=\"mt-5 mb-1\" htmlFor=\"body\">Description</label>\r\n                <textarea className=\"notes__textarea \" name=\"body\"\r\n                    placeholder=\"What happened today?\"\r\n                    value={body} onChange={handleInputChange}></textarea>\r\n\r\n                <div className=\"notes__image\">\r\n                    {\r\n                        (note.imageUrl)\r\n                        &&\r\n                        (\r\n                            <img src={note.imageUrl} alt=\"fantastic\" />\r\n                        )\r\n                    }\r\n                </div>\r\n            </div>\r\n\r\n            <button className=\"btn btn-danger\" onClick={handleDeleteNote}>\r\n                 Delete\r\n            </button>\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const NothingSelected = () => {\r\n    return (\r\n        <div className=\"nothing__main-content animate__animated animate__fadeIn  animate__faster  \">\r\n            <p>Select somethin, or create a new entry</p>\r\n            <i className=\"far fa-star fa-4x mt-5\"></i>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport moment from 'moment'\r\nimport { useDispatch } from 'react-redux';\r\nimport { activeNote } from '../../actions/notes';\r\n\r\nexport const JournalEntry = ({ id, title, body, date, imageUrl }) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const noteDate = moment(date);\r\n    \r\n    const handleSelectNote = () => {\r\n        dispatch(activeNote(id, {title, body, date, imageUrl}))\r\n    }\r\n    \r\n\r\n    return (\r\n        <div className=\"journal__entry pointer animate__animated animate__fadeIn  animate__faster  \" onClick={ handleSelectNote }>\r\n            {\r\n                (imageUrl) &&\r\n                <div className=\"journal__entry-picture\"\r\n                    style={{\r\n                        backgroundImage: `url(${imageUrl})`,\r\n                        backgroundSize: 'cover'\r\n                    }}>\r\n\r\n                </div>\r\n            }\r\n            <div className=\"journal__entry-body\">\r\n                <div className=\"journal__entry-title\">\r\n                    {title}\r\n                </div>\r\n                <div className=\"journal__entry-content\">\r\n                    {body}\r\n                </div>\r\n            </div>\r\n            <div className=\"journal__date\">\r\n                <span>{noteDate.format('dddd')}</span>\r\n                <h4>{ noteDate.format('Do')}</h4>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { JournalEntry } from './JournalEntry'\r\n\r\nexport const JournalEntries = () => {\r\n    \r\n    const { notes } = useSelector(state => state.notes)\r\n    \r\n    return (\r\n        <div className=\"journal__entries animate__animated animate__fadeIn  animate__faster  \">\r\n            {\r\n                notes.map(note =>( <JournalEntry key={note.id} { ...note }/>))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startLogout } from '../../actions/auth';\r\nimport { startNewNote } from '../../actions/notes';\r\nimport { JournalEntries } from './JournalEntries'\r\n\r\nexport const SideBar = () => {\r\n\r\n\r\n    const dispatch = useDispatch();\r\n    const { name } = useSelector(state => state.auth)\r\n\r\n    const handleLogout = () => {\r\n        dispatch(startLogout());\r\n    }\r\n\r\n    const handleAddNewNote = () => {\r\n        \r\n        dispatch(startNewNote());\r\n    }\r\n    \r\n\r\n    return (\r\n        <aside className=\"journal__sidebar\">\r\n\r\n            <div className=\"journal__side-navbar\">\r\n                <h3 className=\"mt-5\">\r\n                    <i className=\"far fa-moon\"></i>\r\n                    <span>  {name} </span>\r\n                </h3>\r\n                <button className=\"btn\" onClick={handleLogout}>Logout</button>\r\n            </div>\r\n\r\n            <div className=\"journal__new-entry\" onClick={ handleAddNewNote }>\r\n                <i className=\"far fa-calendar-plus fa-3x\"></i>\r\n                <p className=\"mt-1\">New Entry</p>\r\n            </div>\r\n\r\n            <JournalEntries />\r\n        </aside>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { NoteScreen } from '../notes/NoteScreen'\r\nimport { NothingSelected } from './NothingSelected'\r\nimport { SideBar } from './SideBar'\r\n\r\nexport const JournalScreen = () => {\r\n    const { active } = useSelector(state => state.notes)\r\n    \r\n    return (\r\n        <div className=\"journal__main-content animate__animated animate__fadeIn  animate__faster  \">\r\n\r\n            <SideBar />\r\n\r\n            <main>\r\n\r\n                {\r\n                    (active) ? <NoteScreen /> : <NothingSelected />\r\n                }\r\n\r\n            </main>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Redirect, Route } from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const PrivateRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n    localStorage.setItem('lastPath', rest.location.pathname);\r\n\r\n    return (\r\n        <Route {...rest}    component={props => (\r\n            (isAuthenticated    )\r\n            ? (<Component {...props}/>)\r\n            : (<Redirect to='/auth/login'/>)\r\n        )} />\r\n    )\r\n}\r\n\r\nPrivateRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import React from 'react'\r\nimport { Redirect, Route } from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const PublicRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n    return (\r\n        <Route {...rest}    component={props => (\r\n            (isAuthenticated    )\r\n            ? (<Redirect to='/'/>)\r\n            : (<Component {...props}/>)\r\n        )} />\r\n    )\r\n}\r\n\r\nPublicRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import React, { useEffect, useState } from 'react'\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Redirect\r\n} from \"react-router-dom\";\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { AuthRouter } from './AuthRouter'\r\nimport { JournalScreen } from '../components/journal/JournalScreen'\r\nimport { firebase } from '../firebase/firebaseConfig'\r\nimport { login } from '../actions/auth';\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport { PublicRoute } from './PublicRoute';\r\nimport { startLoadingNotes } from '../actions/notes';\r\n\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const [checking, setchecking] = useState(true);\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false)\r\n\r\n    useEffect(() => {\r\n        firebase.auth().onAuthStateChanged(async (user) => {\r\n            if (user?.uid) {\r\n\r\n                dispatch(login(user.uid, user.displayName))\r\n                setIsLoggedIn(true);\r\n                \r\n                dispatch(startLoadingNotes(user.uid));\r\n\r\n            } else { setIsLoggedIn(false) }\r\n            setchecking(false)\r\n        })\r\n\r\n    }, [dispatch, setchecking, isLoggedIn])\r\n\r\n\r\n    if (checking) {\r\n        return (\r\n            <h2>Wait...</h2>\r\n        )\r\n    }\r\n    return (\r\n        <>\r\n            <Router>\r\n                <div>\r\n                    <Switch>\r\n                        <PublicRoute path='/auth' isAuthenticated={isLoggedIn} component={AuthRouter} />\r\n                        <PrivateRoute exact path='/' isAuthenticated={isLoggedIn} component={JournalScreen} />\r\n\r\n                        <Redirect to='/auth/login' />\r\n\r\n                    </Switch>\r\n                </div>\r\n            </Router>\r\n        </>\r\n    )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\n/*\r\n\r\nconst initialState = {\r\n    notes: [],\r\n    active: null\r\n    --------------------------------------------\r\n    active: {\r\n        id: firebase-uid,\r\n        title: '',\r\n        body: '',\r\n        imageUrl: '',\r\n        date: 00/00/0000\r\n    }\r\n\r\n}\r\n*/\r\nconst initialState = {\r\n    notes: [],\r\n    active: null\r\n}\r\nexport const notesReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case types.notesSetActiveNote:\r\n            return { ...state, active: { ...action.payload } }\r\n\r\n        case types.notesAddNewNote:\r\n            return { ...state, notes:[ action.payload, ...state.notes]}\r\n            \r\n        case types.notesLoadNotes:\r\n            return { ...state, notes: [...action.payload] }\r\n \r\n        case types.notesRefrshUpdatedNote:\r\n            return { ...state, notes: state.notes.map(note => note.id === action.payload.id ? action.payload.note : note) }\r\n    \r\n        case types.notesDeleteNote:\r\n            return{...state, active: null, notes: state.notes.filter(note => note.id !== action.payload.id)} ;\r\n        case types.notesLogoutCleaningNotes:\r\n            return {...state, active: null, notes: []}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    msgError: null\r\n}\r\nexport const uiReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case types.uiSetError:\r\n            return { ...state, msgError: action.payload }\r\n\r\n        case types.uiRemoveError:\r\n            return { ...state, msgError: null }\r\n\r\n        case types.uiStartLoading:\r\n            return { ...state, loading: true }\r\n\r\n        case types.uiFinishLoading:\r\n            return { ...state, loading: false }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { createStore, combineReducers, applyMiddleware, compose } from 'redux'\r\nimport thunk from 'redux-thunk';\r\n\r\n\r\nimport { authReducer } from '../reducers/authReducer'\r\nimport { notesReducer } from '../reducers/notesReducer';\r\nimport { uiReducer } from '../reducers/uiReducer';\r\n\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nconst reducers = combineReducers({\r\n    auth: authReducer,\r\n    ui: uiReducer,\r\n    notes: notesReducer,\r\n})\r\n\r\nexport const store = createStore(reducers, composeEnhancers(applyMiddleware(thunk)));\r\n","import { types } from \"../types/types\";\r\n\r\n\r\nexport const authReducer = (state = {}, action) => {\r\n\r\n    switch (action.type) {\r\n        case types.login:\r\n            return {\r\n                uid: action.payload.uid,\r\n                name: action.payload.displayName\r\n            }\r\n        case types.logout:\r\n            return {}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n","import React from 'react'\r\nimport { Provider } from 'react-redux'\r\n\r\nimport { AppRouter } from './routers/AppRouter'\r\nimport { store } from './store/store'\r\n\r\nexport const JournalApp = () => {\r\n    return (\r\n        <>\r\n            <Provider store={store}>\r\n                <AppRouter />\r\n            </Provider>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { JournalApp } from './JournalApp';\nimport './styles/styles.scss';\n\nReactDOM.render(\n    <JournalApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}